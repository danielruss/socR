[{"path":"https://danielruss.github.io/socR/articles/GettingStarted.html","id":"create-a-coding-system","dir":"Articles","previous_headings":"","what":"Create a coding system","title":"Getting Started with socR","text":"often first thing . save coding system data github pages. public data, feel free use . want add coding system github repository, let know. long licensing issues, ’ll happy add . example, load soc2000 system https://danielruss.github.io/codingsystems/soc2000_all.csv. actually use soc2010 work, comes socR, use often. coding system S3 class wraps tibble. coding system required column name code column named title. columns optional, however, want move code hierarchy additional columns useful. example, soc2000 Level corresponds number digits code (counting trailing zeros, e.g. 11-0000 2-digit code (Level=2) 11-1010 5-digit code Level=5). parent column immediate parent heirarchy coding system. columns soc2d soc6d codes various levels. codingsystem use NA mark cases don’t exist (e.g. soc6d 11-0000). codingsystem also name printed use. soc2010 coding system comes socR. also soc2010_6d, deprecated removed soon since can create filtering soc2010_all.","code":"library(socR) #>  #> Attaching package: 'socR' #> The following object is masked from 'package:stats': #>  #>     filter  soc2000_all <- codingsystem(\"https://danielruss.github.io/codingsystems/soc2000_all.csv\",name=\"soc2000\") soc2000_all #> # Coding System: soc2000  #>     code    title     Level Hierarchical_structure parent soc2d soc3d soc5d soc6d #>    <chr>   <chr>     <int> <chr>                  <chr>  <chr> <chr> <chr> <chr> #>  1 11-0000 Manageme…     2 Major Group            NA     11-0… NA    NA    NA    #>  2 11-1000 Top Exec…     3 Minor Group            11-00… 11-0… 11-1… NA    NA    #>  3 11-1010 Chief Ex…     5 Broad Occupation       11-10… 11-0… 11-1… 11-1… NA    #>  4 11-1011 Chief Ex…     6 Detailed Occupation    11-10… 11-0… 11-1… 11-1… 11-1… #>  5 11-1020 General …     5 Broad Occupation       11-10… 11-0… 11-1… 11-1… NA    #>  6 11-1021 General …     6 Detailed Occupation    11-10… 11-0… 11-1… 11-1… 11-1… #>  7 11-1030 Legislat…     5 Broad Occupation       11-10… 11-0… 11-1… 11-1… NA    #>  8 11-1031 Legislat…     6 Detailed Occupation    11-10… 11-0… 11-1… 11-1… 11-1… #>  9 11-2000 Advertis…     3 Minor Group            11-00… 11-0… 11-2… NA    NA    #> 10 11-2010 Advertis…     5 Broad Occupation       11-20… 11-0… 11-2… 11-2… NA    #> # ℹ 1,379 more rows soc2010_all #> # Coding System: soc2010  #>     code    title     Level Hierarchical_structure parent soc2d soc3d soc5d soc6d #>    <chr>   <chr>     <dbl> <chr>                  <chr>  <chr> <chr> <chr> <chr> #>  1 11-0000 Manageme…     2 Major Group            NA     11-0… NA    NA    NA    #>  2 11-1000 Top Exec…     3 Minor Group            11-00… 11-0… 11-1… NA    NA    #>  3 11-1010 Chief Ex…     5 Broad Group            11-10… 11-0… 11-1… 11-1… NA    #>  4 11-1011 Chief Ex…     6 Detailed Occupation    11-10… 11-0… 11-1… 11-1… 11-1… #>  5 11-1020 General …     5 Broad Group            11-10… 11-0… 11-1… 11-1… NA    #>  6 11-1021 General …     6 Detailed Occupation    11-10… 11-0… 11-1… 11-1… 11-1… #>  7 11-1030 Legislat…     5 Broad Group            11-10… 11-0… 11-1… 11-1… NA    #>  8 11-1031 Legislat…     6 Detailed Occupation    11-10… 11-0… 11-1… 11-1… 11-1… #>  9 11-2000 Advertis…     3 Minor Group            11-00… 11-0… 11-2… NA    NA    #> 10 11-2010 Advertis…     5 Broad Group            11-20… 11-0… 11-2… 11-2… NA    #> # ℹ 1,415 more rows"},{"path":"https://danielruss.github.io/socR/articles/GettingStarted.html","id":"changing-to-higher-level-codes","dir":"Articles","previous_headings":"","what":"Changing to higher level codes","title":"Getting Started with socR","text":"Given vector soc codes, may want convert 2-digit socs. order use function factory method create appropriate function.","code":"## create a function to convert a vector of codes to a the 2-digit level ## notice we are uses the column name that contains the 2-digit socs for ## each code to_2d <- to_level(soc2000_all,soc2d)  to_2d(c(\"11-1021\",\"11-1031\")) #> [1] \"11-0000\" \"11-0000\"  ## lets do it for a tibble... my_data <- tibble::tibble(resp_id=c(\"A13254\",\"A33122\"),soc2000=c(\"11-1021\",\"11-1031\")) |>   dplyr::mutate(soc2000_2d=to_2d(soc2000)) my_data #> # A tibble: 2 × 3 #>   resp_id soc2000 soc2000_2d #>   <chr>   <chr>   <chr>      #> 1 A13254  11-1021 11-0000    #> 2 A33122  11-1031 11-0000"},{"path":"https://danielruss.github.io/socR/articles/GettingStarted.html","id":"checking-for-invalid-codes","dir":"Articles","previous_headings":"","what":"Checking for invalid codes","title":"Getting Started with socR","text":"Sometimes want check data invalid codes. socR ways checking codes. coding system, can create function using provided factory method valid_code takes either coding system vector codes. data column named code, codingsystem knows column code column can create list valid codes . want, replace codingsystem object vector valid codes","code":"is_valid_soc2000 <- valid_code(soc2000_all) is_valid_soc2000( c(\"11-0000\",\"11\",\"11-1021\",\"11-1030\") ) #> [1]  TRUE FALSE  TRUE  TRUE"},{"path":"https://danielruss.github.io/socR/articles/GettingStarted.html","id":"filtering-a-coding-system","dir":"Articles","previous_headings":"","what":"Filtering a coding system","title":"Getting Started with socR","text":"Sometime interested entire coding system, codes particular level. Since codingsystem thin wrapper around tibble, can use dplyr verbs (select filter – can add others needed). Now see named variable soc2000_all. get odd errors filter, may using wrong filter function. stats package, loaded default, filter method. need dplyr verb don’t support, ask might able add . Otherwise, work around get tibble codingsystem table entry S3 codingsystem object. Since now tibble, can continue working tibble, convert back codingsystem using as_codingsystem function. need give codingsystem name, default something useless like coding system.","code":"soc2000_5d <- soc2000_all |> dplyr::filter(Level == 5,name=\"soc2000_5d\") soc2000_5d #> # Coding System: soc2000_5d  #>     code    title     Level Hierarchical_structure parent soc2d soc3d soc5d soc6d #>    <chr>   <chr>     <int> <chr>                  <chr>  <chr> <chr> <chr> <chr> #>  1 11-1010 Chief Ex…     5 Broad Occupation       11-10… 11-0… 11-1… 11-1… NA    #>  2 11-1020 General …     5 Broad Occupation       11-10… 11-0… 11-1… 11-1… NA    #>  3 11-1030 Legislat…     5 Broad Occupation       11-10… 11-0… 11-1… 11-1… NA    #>  4 11-2010 Advertis…     5 Broad Occupation       11-20… 11-0… 11-2… 11-2… NA    #>  5 11-2020 Marketin…     5 Broad Occupation       11-20… 11-0… 11-2… 11-2… NA    #>  6 11-2030 Public R…     5 Broad Occupation       11-20… 11-0… 11-2… 11-2… NA    #>  7 11-3010 Administ…     5 Broad Occupation       11-30… 11-0… 11-3… 11-3… NA    #>  8 11-3020 Computer…     5 Broad Occupation       11-30… 11-0… 11-3… 11-3… NA    #>  9 11-3030 Financia…     5 Broad Occupation       11-30… 11-0… 11-3… 11-3… NA    #> 10 11-3040 Human Re…     5 Broad Occupation       11-30… 11-0… 11-3… 11-3… NA    #> # ℹ 439 more rows  ## you can check for valid 5-digit soc codes is_valid_5digit_soc2010 <- valid_code(soc2000_5d)  is_valid_5digit_soc2010( c(\"11-0000\",\"11\",\"11-1021\",\"11-1030\") ) #> [1] FALSE FALSE FALSE  TRUE soc2000_3d <- soc2000_all$table |> dplyr::filter(Level == 3) |>   as_codingsystem(name=\"soc2000_3d\") soc2000_3d #> # Coding System: soc2000_3d  #>     code    title     Level Hierarchical_structure parent soc2d soc3d soc5d soc6d #>    <chr>   <chr>     <int> <chr>                  <chr>  <chr> <chr> <chr> <chr> #>  1 11-1000 Top Exec…     3 Minor Group            11-00… 11-0… 11-1… NA    NA    #>  2 11-2000 Advertis…     3 Minor Group            11-00… 11-0… 11-2… NA    NA    #>  3 11-3000 Operatio…     3 Minor Group            11-00… 11-0… 11-3… NA    NA    #>  4 11-9000 Other Ma…     3 Minor Group            11-00… 11-0… 11-9… NA    NA    #>  5 13-1000 Business…     3 Minor Group            13-00… 13-0… 13-1… NA    NA    #>  6 13-2000 Financia…     3 Minor Group            13-00… 13-0… 13-2… NA    NA    #>  7 15-1000 Computer…     3 Minor Group            15-00… 15-0… 15-1… NA    NA    #>  8 15-2000 Mathemat…     3 Minor Group            15-00… 15-0… 15-2… NA    NA    #>  9 17-1000 Architec…     3 Minor Group            17-00… 17-0… 17-1… NA    NA    #> 10 17-2000 Engineers     3 Minor Group            17-00… 17-0… 17-2… NA    NA    #> # ℹ 86 more rows"},{"path":"https://danielruss.github.io/socR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel E. Russ. Author, maintainer.","code":""},{"path":"https://danielruss.github.io/socR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Russ DE (2025). socR: Useful functions working occupation coding. R package version 0.7.0, https://danielruss.github.io/socR/.","code":"@Manual{,   title = {socR: Useful functions for working with occupation coding},   author = {Daniel E. Russ},   year = {2025},   note = {R package version 0.7.0},   url = {https://danielruss.github.io/socR/}, }"},{"path":"https://danielruss.github.io/socR/index.html","id":"socr","dir":"","previous_headings":"","what":"Useful functions for working with occupation coding","title":"Useful functions for working with occupation coding","text":"R package used analyze SOCcer results socR centered around codingsystems crosswalking codingsystems. ’s still development likely change often. problem?","code":""},{"path":"https://danielruss.github.io/socR/index.html","id":"how-to-install","dir":"","previous_headings":"","what":"How to install","title":"Useful functions for working with occupation coding","text":"don’t devtools package installed, install first… ","code":"install.packages(\"devtools) library(devtools) install_github(\"danielruss/socR\")"},{"path":"https://danielruss.github.io/socR/reference/as_codingsystem.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a coding system from a data frame — as_codingsystem","title":"Create a coding system from a data frame — as_codingsystem","text":"Create coding system data frame","code":""},{"path":"https://danielruss.github.io/socR/reference/as_codingsystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a coding system from a data frame — as_codingsystem","text":"","code":"as_codingsystem(x, name = \"\", ...)  # S3 method for class 'data.frame' as_codingsystem(x, name = \"\", ...)  # S3 method for class 'codingsystem' as_codingsystem(x, name = \"\", ...)"},{"path":"https://danielruss.github.io/socR/reference/as_codingsystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a coding system from a data frame — as_codingsystem","text":"x data frame containing columns \"code\" \"title\" name coding system name ... additional parameters","code":""},{"path":"https://danielruss.github.io/socR/reference/as_codingsystem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a coding system from a data frame — as_codingsystem","text":"codingsystem object.","code":""},{"path":"https://danielruss.github.io/socR/reference/codeJobHistory.html","id":null,"dir":"Reference","previous_headings":"","what":"Auto-code job results with SOCcer using via the soccer API — codeJobHistory","title":"Auto-code job results with SOCcer using via the soccer API — codeJobHistory","text":"codes one job time.  order code multiple jobs, can create tibble (data frame) use pmap_dfr produce results tibble similar web-based version SOCcer (https://soccer.nci.nih.gov)","code":""},{"path":"https://danielruss.github.io/socR/reference/codeJobHistory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auto-code job results with SOCcer using via the soccer API — codeJobHistory","text":"","code":"codeJobHistory(title, task = \"\", industry = \"\", ..., n = 10)"},{"path":"https://danielruss.github.io/socR/reference/codeJobHistory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auto-code job results with SOCcer using via the soccer API — codeJobHistory","text":"title job title task tasks performed job industry industry (SIC 1987 code) ... (used) n number soc codes return (default)","code":""},{"path":"https://danielruss.github.io/socR/reference/codeJobHistory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Auto-code job results with SOCcer using via the soccer API — codeJobHistory","text":"tibble consisting title/task/industry top n SOCcer results scores","code":""},{"path":"https://danielruss.github.io/socR/reference/codeJobHistory.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Auto-code job results with SOCcer using via the soccer API — codeJobHistory","text":"Please use web-based version handling large jobs.","code":""},{"path":"https://danielruss.github.io/socR/reference/codeJobHistory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Auto-code job results with SOCcer using via the soccer API — codeJobHistory","text":"","code":"if (FALSE) { # \\dontrun{ soccer_results <- codeJobHistory(\"epidemiologist\") jobs <- tibble::tibble(title=c(\"chemist\",\"farmer\",\"data scientist\"),                        task=rep(\"\",3),industry=rep(\"\",3)) soccer_results_3 <- purrr::pmap_dfr(jobs,codeJobHistory,n=20) } # }"},{"path":"https://danielruss.github.io/socR/reference/codes.html","id":null,"dir":"Reference","previous_headings":"","what":"get the codes for a crosswalk, — codes","title":"get the codes for a crosswalk, — codes","text":"returns codes column code_column","code":""},{"path":"https://danielruss.github.io/socR/reference/codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the codes for a crosswalk, — codes","text":"","code":"codes(x, code_column)"},{"path":"https://danielruss.github.io/socR/reference/codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the codes for a crosswalk, — codes","text":"x crosswalk class xwalk code_column column names desired codes.","code":""},{"path":"https://danielruss.github.io/socR/reference/codesAgree.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if codes agree with reviewer — codesAgree","title":"Check if codes agree with reviewer — codesAgree","text":"Compares vector codes vector reviewer codes.","code":""},{"path":"https://danielruss.github.io/socR/reference/codesAgree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if codes agree with reviewer — codesAgree","text":"","code":"codesAgree(codes, reviewer)"},{"path":"https://danielruss.github.io/socR/reference/codesAgree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if codes agree with reviewer — codesAgree","text":"codes codes compare reviewer reviewer's code – \"gold\" standard","code":""},{"path":"https://danielruss.github.io/socR/reference/codesAgree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if codes agree with reviewer — codesAgree","text":"TRUE codes reviewer otherwise FALSE","code":""},{"path":"https://danielruss.github.io/socR/reference/codesAgree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if codes agree with reviewer — codesAgree","text":"Particularly useful combined purrr::map_lgl","code":""},{"path":"https://danielruss.github.io/socR/reference/codesAgree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if codes agree with reviewer — codesAgree","text":"","code":"x <- '11-1011' y <- c('11-1011','11-1031') codesAgree(x,c(\"11-1011\",\"11-1021\")) #> [1] TRUE codesAgree(y,c(\"11-1021\",\"11-1031\")) #> [1] TRUE codesAgree(x,c(\"13-1011\",\"11-1021\")) #> [1] FALSE codesAgree(y,c(\"13-1011\",\"11-1021\")) #> [1] FALSE"},{"path":"https://danielruss.github.io/socR/reference/codingsystem.html","id":null,"dir":"Reference","previous_headings":"","what":"constructor create a coding system S3 class — codingsystem","title":"constructor create a coding system S3 class — codingsystem","text":"constructor create coding system S3 class","code":""},{"path":"https://danielruss.github.io/socR/reference/codingsystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"constructor create a coding system S3 class — codingsystem","text":"","code":"codingsystem(codes, titles, ..., name = \"\")"},{"path":"https://danielruss.github.io/socR/reference/codingsystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"constructor create a coding system S3 class — codingsystem","text":"codes vector codes, dataframe containing columns \"code\" (codes) \"title\" (titles), url/file path csv file containing codes titles header row containing least \"code\" title.  columns may present. titles vector title ... additional parameters passed rio::import name coding system name","code":""},{"path":"https://danielruss.github.io/socR/reference/codingsystem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"constructor create a coding system S3 class — codingsystem","text":"codingsystem object","code":""},{"path":"https://danielruss.github.io/socR/reference/codingsystem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"constructor create a coding system S3 class — codingsystem","text":"","code":"url <- \"https://danielruss.github.io/codingsystems/naics2022_all.csv\" naic2022 <- codingsystem(url,name = \"naics2022\",    colClasses=c(rep(\"character\",2),\"integer\",rep(\"character\",5)))"},{"path":"https://danielruss.github.io/socR/reference/codingsystem_dplyr.html","id":null,"dir":"Reference","previous_headings":"","what":"Use Coding system with dplyr — select.codingsystem","title":"Use Coding system with dplyr — select.codingsystem","text":"methods allow use codingsystem like tibble. using select, make sure keep code/title else can break functionality codingsystem.","code":""},{"path":"https://danielruss.github.io/socR/reference/codingsystem_dplyr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use Coding system with dplyr — select.codingsystem","text":"","code":"# S3 method for class 'codingsystem' select(.data, ...)  # S3 method for class 'codingsystem' filter(.data, ..., .by = NULL, .preserve = FALSE, name = NULL)  # S3 method for class 'codingsystem' mutate(.data, ...)  # S3 method for class 'codingsystem' arrange(.data, ..., .by_group = FALSE)  # S3 method for class 'codingsystem' as_tibble(x, ..., .rows = NULL, .name_repair = NULL, rownames = NULL)  # S3 method for class 'codingsystem' count(x, ..., wt = NULL, sort = FALSE, name = NULL)"},{"path":"https://danielruss.github.io/socR/reference/codingsystem_dplyr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use Coding system with dplyr — select.codingsystem","text":".data coding system ... parts coding system .passed dplyr::filter .preserve passed dplyr::filter name name filtered coding system .by_group passed dplyr::arrange x coding system .rows passed dplyer::as_tibble .name_repair passed dplyer::as_tibble rownames passed dplyer::as_tibble","code":""},{"path":"https://danielruss.github.io/socR/reference/codingsystem_dplyr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use Coding system with dplyr — select.codingsystem","text":"new codingsystem","code":""},{"path":"https://danielruss.github.io/socR/reference/combine_crosswalks.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine two crosswalks to produce a new crosswalk — combine_crosswalks","title":"Combine two crosswalks to produce a new crosswalk — combine_crosswalks","text":"Takes two concordance tables (xw1 xw2), xw1 go coding system one intermediary coding system, xw2 goes intermediary coding system coding system two.  goal make one table goes coding system 1 coding system 2.","code":""},{"path":"https://danielruss.github.io/socR/reference/combine_crosswalks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine two crosswalks to produce a new crosswalk — combine_crosswalks","text":"","code":"combine_crosswalks(xw1, xw2)"},{"path":"https://danielruss.github.io/socR/reference/combine_crosswalks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine two crosswalks to produce a new crosswalk — combine_crosswalks","text":"xw1 - crosswalk 1, either xwalk object data.frame xw2 - crosswalk 2,  either xwalk object data.frame","code":""},{"path":"https://danielruss.github.io/socR/reference/combine_crosswalks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine two crosswalks to produce a new crosswalk — combine_crosswalks","text":"","code":"# the noc_isco example has an extra column that confuses the parser, # so I have to specify the parts or skip the last column. noc_isco <- xwalk(\"https://danielruss.github.io/codingsystems/noc2011_isco2008.csv\",                    col_types = \"cccc-\") isco_soc <- xwalk(\"https://danielruss.github.io/codingsystems/isco2008_soc2010.csv\") combine_crosswalks(noc_isco,isco_soc) #> # Crosswalk: noc2011 <==> soc2010  #>     noc2011 noc2011_title                                   soc2010 soc2010_title #>    <chr>   <chr>                                           <chr>   <chr>         #>  1 0011    Legislators                                     11-1011 Chief Execut… #>  2 0011    Legislators                                     11-1031 Legislators   #>  3 0012    Senior government managers and officials        11-1011 Chief Execut… #>  4 0012    Senior government managers and officials        11-1021 General and … #>  5 0012    Senior government managers and officials        11-9161 Emergency Ma… #>  6 0013    Senior managers - financial, communications an… 11-1011 Chief Execut… #>  7 0013    Senior managers - financial, communications an… 11-1021 General and … #>  8 0014    Senior managers - health, education, social an… 11-1011 Chief Execut… #>  9 0014    Senior managers - health, education, social an… 11-1021 General and … #> 10 0014    Senior managers - health, education, social an… 11-2031 Public Relat… #> # ℹ 2,655 more rows"},{"path":"https://danielruss.github.io/socR/reference/createMultiHotEncoder.html","id":null,"dir":"Reference","previous_headings":"","what":"creates a multihot encoder from a list of labels — createMultiHotEncoder","title":"creates a multihot encoder from a list of labels — createMultiHotEncoder","text":"creates multihot encoder list labels","code":""},{"path":"https://danielruss.github.io/socR/reference/createMultiHotEncoder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"creates a multihot encoder from a list of labels — createMultiHotEncoder","text":"","code":"createMultiHotEncoder(allLabels)"},{"path":"https://danielruss.github.io/socR/reference/createMultiHotEncoder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"creates a multihot encoder from a list of labels — createMultiHotEncoder","text":"allLabels complete set labels","code":""},{"path":"https://danielruss.github.io/socR/reference/createMultiHotEncoder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"creates a multihot encoder from a list of labels — createMultiHotEncoder","text":"function preforms multihot encoding","code":""},{"path":"https://danielruss.github.io/socR/reference/crosswalk.html","id":null,"dir":"Reference","previous_headings":"","what":"Use the concordance table (crosswalk) to convert from one coding system to another. — crosswalk","title":"Use the concordance table (crosswalk) to convert from one coding system to another. — crosswalk","text":"Use concordance table (crosswalk) convert one coding system another.","code":""},{"path":"https://danielruss.github.io/socR/reference/crosswalk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use the concordance table (crosswalk) to convert from one coding system to another. — crosswalk","text":"","code":"crosswalk(codes, xwalk, invert = FALSE)"},{"path":"https://danielruss.github.io/socR/reference/crosswalk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use the concordance table (crosswalk) to convert from one coding system to another. — crosswalk","text":"codes vector codes crosswalked xwalk concordance table. invert default crosswalk goes codes1 codes2 setting invert TRUE make crosswalk go codes2 codes1","code":""},{"path":"https://danielruss.github.io/socR/reference/crosswalk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use the concordance table (crosswalk) to convert from one coding system to another. — crosswalk","text":"unnamed list codes resulting coding system","code":""},{"path":"https://danielruss.github.io/socR/reference/crosswalk_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Crosswalk multiple columns in a tibble/data frame — crosswalk_columns","title":"Crosswalk multiple columns in a tibble/data frame — crosswalk_columns","text":"data frame data multiple columns need crosswalked, use pipe.","code":""},{"path":"https://danielruss.github.io/socR/reference/crosswalk_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crosswalk multiple columns in a tibble/data frame — crosswalk_columns","text":"","code":"crosswalk_columns(.data, xwalk, new_column_name, ..., unnest_results = TRUE)"},{"path":"https://danielruss.github.io/socR/reference/crosswalk_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crosswalk multiple columns in a tibble/data frame — crosswalk_columns","text":".data job data xwalk crosswalk going code system 1 coding system 2 new_column_name column name results results unnested, results colname_1, colname_2 ... colname_n, otherwise results list column name new_column_name. ... Columns need crosswalked unnest_results default=TRUE, results separated individual columns else single list column","code":""},{"path":"https://danielruss.github.io/socR/reference/crosswalk_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Crosswalk multiple columns in a tibble/data frame — crosswalk_columns","text":"crosswalked tibble.","code":""},{"path":"https://danielruss.github.io/socR/reference/crosswalk_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Crosswalk multiple columns in a tibble/data frame — crosswalk_columns","text":"","code":"if (FALSE) { # \\dontrun{ a <- tibble::tibble(id=c(\"job-1\",\"job-2\"),soc2010_1=c(\"11-1011\",\"11-2011\"),      soc2010_2=c(\"11-1021\",NA)) xw <- socR::xwalk(\"https://danielruss.github.io/codingsystems/soc2010_soc2018.csv\") a |> crosswalk_columns(xw,soc2018_xw,soc2010_1,soc2010_2) a |> crosswalk_columns(xw,soc2018_xw,soc2010_1,soc2010_2,unnest_results=FALSE) } # }"},{"path":"https://danielruss.github.io/socR/reference/dim.codingsystem.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimensions of an Object — dim.codingsystem","title":"Dimensions of an Object — dim.codingsystem","text":"Retrieve set dimension object.","code":""},{"path":"https://danielruss.github.io/socR/reference/dim.codingsystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimensions of an Object — dim.codingsystem","text":"","code":"# S3 method for class 'codingsystem' dim(x)"},{"path":"https://danielruss.github.io/socR/reference/dim.codingsystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimensions of an Object — dim.codingsystem","text":"x R object, example matrix, array data frame.","code":""},{"path":"https://danielruss.github.io/socR/reference/dim.codingsystem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dimensions of an Object — dim.codingsystem","text":"array (hence particular, matrix) dim retrieves   dim attribute object.  NULL vector   mode integer. replacement method changes \"dim\" attribute (provided   new value compatible) removes \"dimnames\"   \"names\" attributes.","code":""},{"path":"https://danielruss.github.io/socR/reference/dim.codingsystem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dimensions of an Object — dim.codingsystem","text":"functions dim dim<- internal generic   primitive functions. dim method data.frames, returns   lengths row.names attribute x   x (numbers rows columns respectively).","code":""},{"path":"https://danielruss.github.io/socR/reference/dim.codingsystem.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dimensions of an Object — dim.codingsystem","text":"Becker, R. ., Chambers, J. M. Wilks, . R. (1988)   New S Language.   Wadsworth & Brooks/Cole.","code":""},{"path":[]},{"path":"https://danielruss.github.io/socR/reference/dim.codingsystem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dimensions of an Object — dim.codingsystem","text":"","code":"x <- 1:12 ; dim(x) <- c(3,4) x #>      [,1] [,2] [,3] [,4] #> [1,]    1    4    7   10 #> [2,]    2    5    8   11 #> [3,]    3    6    9   12  # simple versions of nrow and ncol could be defined as follows nrow0 <- function(x) dim(x)[1] ncol0 <- function(x) dim(x)[2]"},{"path":"https://danielruss.github.io/socR/reference/extend_standard_soc1980_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Extended SOC 1980 codes — extend_standard_soc1980_codes","title":"Extended SOC 1980 codes — extend_standard_soc1980_codes","text":"Takes valid 1980 standardized codes (ones book) extends unit codes always detailed (even exactly parent code.)","code":""},{"path":"https://danielruss.github.io/socR/reference/extend_standard_soc1980_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extended SOC 1980 codes — extend_standard_soc1980_codes","text":"","code":"extend_standard_soc1980_codes(codes)"},{"path":"https://danielruss.github.io/socR/reference/extend_standard_soc1980_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extended SOC 1980 codes — extend_standard_soc1980_codes","text":"codes codes extending","code":""},{"path":"https://danielruss.github.io/socR/reference/extend_standard_soc1980_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extended SOC 1980 codes — extend_standard_soc1980_codes","text":"extended codes.","code":""},{"path":"https://danielruss.github.io/socR/reference/format.codingsystem.html","id":null,"dir":"Reference","previous_headings":"","what":"formats a codingsystem — format.codingsystem","title":"formats a codingsystem — format.codingsystem","text":"formats codingsystem","code":""},{"path":"https://danielruss.github.io/socR/reference/format.codingsystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"formats a codingsystem — format.codingsystem","text":"","code":"# S3 method for class 'codingsystem' format(x, ...)"},{"path":"https://danielruss.github.io/socR/reference/format.codingsystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"formats a codingsystem — format.codingsystem","text":"x - codingsystem ... currently used","code":""},{"path":"https://danielruss.github.io/socR/reference/format.codingsystem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"formats a codingsystem — format.codingsystem","text":"formatted character vector","code":""},{"path":"https://danielruss.github.io/socR/reference/get_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of codes from a coding system — get_codes","title":"Get a list of codes from a coding system — get_codes","text":"Get list codes coding system","code":""},{"path":"https://danielruss.github.io/socR/reference/get_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of codes from a coding system — get_codes","text":"","code":"get_codes(.codingsystem)"},{"path":"https://danielruss.github.io/socR/reference/get_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of codes from a coding system — get_codes","text":".codingsystem either codingsystem tibble column named \"code\".","code":""},{"path":"https://danielruss.github.io/socR/reference/get_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of codes from a coding system — get_codes","text":"vector codes","code":""},{"path":"https://danielruss.github.io/socR/reference/head.codingsystem.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the First or Last Parts of an Object — head.codingsystem","title":"Return the First or Last Parts of an Object — head.codingsystem","text":"Returns first last parts vector, matrix, table, data frame   function.  Since head() tail() generic   functions, may also extended classes.","code":""},{"path":"https://danielruss.github.io/socR/reference/head.codingsystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the First or Last Parts of an Object — head.codingsystem","text":"","code":"# S3 method for class 'codingsystem' head(x, ...)"},{"path":"https://danielruss.github.io/socR/reference/head.codingsystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the First or Last Parts of an Object — head.codingsystem","text":"x object ... arguments passed methods.","code":""},{"path":"https://danielruss.github.io/socR/reference/head.codingsystem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the First or Last Parts of an Object — head.codingsystem","text":"object (usually) like x generally smaller.  Hence,   arrays, result corresponds x[.., drop=FALSE].   ftable objects x, transformed format(x).","code":""},{"path":"https://danielruss.github.io/socR/reference/head.codingsystem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return the First or Last Parts of an Object — head.codingsystem","text":"vector/array based objects, head() (tail()) returns   subset dimensionality x, usually   class. historical reasons, default select   first (last) 6 indices first dimension (\"rows\") along   length non-dimensioned vector, full extent (indices)   remaining dimensions. head.matrix()   tail.matrix() exported. default array(/matrix) methods head()   tail() quite general. work class   dim() method, length() method (  required dim() returns NULL), [ method   (accepts drop argument can subset   dimensions dimensioned case). functions, lines deparsed function returned   character strings. x array(/matrix) dimensionality two ,   tail() add dimnames similar appear   full printing x dimensions k   n[k] specified non-missing dimnames(x)[[k]]   (dimnames(x) ) NULL.  Specifically,   form added dimnames vary different dimensions follows: k=1 (rows): \"[n,]\" (right justified       whitespace padding) k=2 (columns): \"[,n]\" (whitespace       padding) k>2 (higher dims): \"n\", .e., indices       character values Setting keepnums = FALSE suppresses behaviour. data.frame subsetting (‘indexing’) keeps   attributes, head() tail()   methods data frames.","code":""},{"path":"https://danielruss.github.io/socR/reference/head.codingsystem.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Return the First or Last Parts of an Object — head.codingsystem","text":"array inputs output tail keepnums TRUE,   dimnames vectors added dimensions >2 original   numeric indices dimension character vectors.    means , e.g., 3-dimensional array arr,   tail(arr, c(2,2,-1))[ , , 2]   tail(arr, c(2,2,-1))[ , , \"2\"] may valid   completely different meanings.","code":""},{"path":"https://danielruss.github.io/socR/reference/head.codingsystem.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return the First or Last Parts of an Object — head.codingsystem","text":"Patrick Burns, improved corrected R-Core. Negative argument   added Vincent Goulet.  Multi-dimension support added Gabriel Becker.","code":""},{"path":"https://danielruss.github.io/socR/reference/head.codingsystem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the First or Last Parts of an Object — head.codingsystem","text":"","code":"head(letters) #> [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" head(letters, n = -6L) #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" #> [20] \"t\"  head(freeny.x, n = 10L) #>       lag quarterly revenue price index income level market potential #>  [1,]               8.79636     4.70997      5.82110          12.9699 #>  [2,]               8.79236     4.70217      5.82558          12.9733 #>  [3,]               8.79137     4.68944      5.83112          12.9774 #>  [4,]               8.81486     4.68558      5.84046          12.9806 #>  [5,]               8.81301     4.64019      5.85036          12.9831 #>  [6,]               8.90751     4.62553      5.86464          12.9854 #>  [7,]               8.93673     4.61991      5.87769          12.9900 #>  [8,]               8.96161     4.61654      5.89763          12.9943 #>  [9,]               8.96044     4.61407      5.92574          12.9992 #> [10,]               9.00868     4.60766      5.94232          13.0033 head(freeny.y) #>         Qtr1    Qtr2    Qtr3    Qtr4 #> 1962         8.79236 8.79137 8.81486 #> 1963 8.81301 8.90751 8.93673          head(iris3) #> , , Setosa #>  #>      Sepal L. Sepal W. Petal L. Petal W. #> [1,]      5.1      3.5      1.4      0.2 #> [2,]      4.9      3.0      1.4      0.2 #> [3,]      4.7      3.2      1.3      0.2 #> [4,]      4.6      3.1      1.5      0.2 #> [5,]      5.0      3.6      1.4      0.2 #> [6,]      5.4      3.9      1.7      0.4 #>  #> , , Versicolor #>  #>      Sepal L. Sepal W. Petal L. Petal W. #> [1,]      7.0      3.2      4.7      1.4 #> [2,]      6.4      3.2      4.5      1.5 #> [3,]      6.9      3.1      4.9      1.5 #> [4,]      5.5      2.3      4.0      1.3 #> [5,]      6.5      2.8      4.6      1.5 #> [6,]      5.7      2.8      4.5      1.3 #>  #> , , Virginica #>  #>      Sepal L. Sepal W. Petal L. Petal W. #> [1,]      6.3      3.3      6.0      2.5 #> [2,]      5.8      2.7      5.1      1.9 #> [3,]      7.1      3.0      5.9      2.1 #> [4,]      6.3      2.9      5.6      1.8 #> [5,]      6.5      3.0      5.8      2.2 #> [6,]      7.6      3.0      6.6      2.1 #>  head(iris3, c(6L, 2L)) #> , , Setosa #>  #>      Sepal L. Sepal W. #> [1,]      5.1      3.5 #> [2,]      4.9      3.0 #> [3,]      4.7      3.2 #> [4,]      4.6      3.1 #> [5,]      5.0      3.6 #> [6,]      5.4      3.9 #>  #> , , Versicolor #>  #>      Sepal L. Sepal W. #> [1,]      7.0      3.2 #> [2,]      6.4      3.2 #> [3,]      6.9      3.1 #> [4,]      5.5      2.3 #> [5,]      6.5      2.8 #> [6,]      5.7      2.8 #>  #> , , Virginica #>  #>      Sepal L. Sepal W. #> [1,]      6.3      3.3 #> [2,]      5.8      2.7 #> [3,]      7.1      3.0 #> [4,]      6.3      2.9 #> [5,]      6.5      3.0 #> [6,]      7.6      3.0 #>  head(iris3, c(6L, -1L, 2L)) #> , , Setosa #>  #>      Sepal L. Sepal W. Petal L. #> [1,]      5.1      3.5      1.4 #> [2,]      4.9      3.0      1.4 #> [3,]      4.7      3.2      1.3 #> [4,]      4.6      3.1      1.5 #> [5,]      5.0      3.6      1.4 #> [6,]      5.4      3.9      1.7 #>  #> , , Versicolor #>  #>      Sepal L. Sepal W. Petal L. #> [1,]      7.0      3.2      4.7 #> [2,]      6.4      3.2      4.5 #> [3,]      6.9      3.1      4.9 #> [4,]      5.5      2.3      4.0 #> [5,]      6.5      2.8      4.6 #> [6,]      5.7      2.8      4.5 #>   tail(letters) #> [1] \"u\" \"v\" \"w\" \"x\" \"y\" \"z\" tail(letters, n = -6L) #>  [1] \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" #> [20] \"z\"  tail(freeny.x) #>       lag quarterly revenue price index income level market potential #> [34,]               9.69405     4.30909      6.17369          13.1459 #> [35,]               9.69958     4.30909      6.16135          13.1520 #> [36,]               9.68683     4.30552      6.18231          13.1593 #> [37,]               9.71774     4.29627      6.18768          13.1579 #> [38,]               9.74924     4.27839      6.19377          13.1625 #> [39,]               9.77536     4.27789      6.20030          13.1664 ## the bottom-right \"corner\" : tail(freeny.x, n = c(4, 2)) #>       income level market potential #> [36,]      6.18231          13.1593 #> [37,]      6.18768          13.1579 #> [38,]      6.19377          13.1625 #> [39,]      6.20030          13.1664 tail(freeny.y) #>         Qtr1    Qtr2    Qtr3    Qtr4 #> 1970                 9.69958 9.68683 #> 1971 9.71774 9.74924 9.77536 9.79424  tail(iris3) #> , , Setosa #>  #>       Sepal L. Sepal W. Petal L. Petal W. #> [45,]      5.1      3.8      1.9      0.4 #> [46,]      4.8      3.0      1.4      0.3 #> [47,]      5.1      3.8      1.6      0.2 #> [48,]      4.6      3.2      1.4      0.2 #> [49,]      5.3      3.7      1.5      0.2 #> [50,]      5.0      3.3      1.4      0.2 #>  #> , , Versicolor #>  #>       Sepal L. Sepal W. Petal L. Petal W. #> [45,]      5.6      2.7      4.2      1.3 #> [46,]      5.7      3.0      4.2      1.2 #> [47,]      5.7      2.9      4.2      1.3 #> [48,]      6.2      2.9      4.3      1.3 #> [49,]      5.1      2.5      3.0      1.1 #> [50,]      5.7      2.8      4.1      1.3 #>  #> , , Virginica #>  #>       Sepal L. Sepal W. Petal L. Petal W. #> [45,]      6.7      3.3      5.7      2.5 #> [46,]      6.7      3.0      5.2      2.3 #> [47,]      6.3      2.5      5.0      1.9 #> [48,]      6.5      3.0      5.2      2.0 #> [49,]      6.2      3.4      5.4      2.3 #> [50,]      5.9      3.0      5.1      1.8 #>  tail(iris3, c(6L, 2L)) #> , , Setosa #>  #>       Petal L. Petal W. #> [45,]      1.9      0.4 #> [46,]      1.4      0.3 #> [47,]      1.6      0.2 #> [48,]      1.4      0.2 #> [49,]      1.5      0.2 #> [50,]      1.4      0.2 #>  #> , , Versicolor #>  #>       Petal L. Petal W. #> [45,]      4.2      1.3 #> [46,]      4.2      1.2 #> [47,]      4.2      1.3 #> [48,]      4.3      1.3 #> [49,]      3.0      1.1 #> [50,]      4.1      1.3 #>  #> , , Virginica #>  #>       Petal L. Petal W. #> [45,]      5.7      2.5 #> [46,]      5.2      2.3 #> [47,]      5.0      1.9 #> [48,]      5.2      2.0 #> [49,]      5.4      2.3 #> [50,]      5.1      1.8 #>  tail(iris3, c(6L, -1L, 2L)) #> , , Versicolor #>  #>       Sepal W. Petal L. Petal W. #> [45,]      2.7      4.2      1.3 #> [46,]      3.0      4.2      1.2 #> [47,]      2.9      4.2      1.3 #> [48,]      2.9      4.3      1.3 #> [49,]      2.5      3.0      1.1 #> [50,]      2.8      4.1      1.3 #>  #> , , Virginica #>  #>       Sepal W. Petal L. Petal W. #> [45,]      3.3      5.7      2.5 #> [46,]      3.0      5.2      2.3 #> [47,]      2.5      5.0      1.9 #> [48,]      3.0      5.2      2.0 #> [49,]      3.4      5.4      2.3 #> [50,]      3.0      5.1      1.8 #>   ## iris with dimnames stripped a3d <- iris3 ; dimnames(a3d) <- NULL tail(a3d, c(6, -1, 2)) # keepnums = TRUE is default here! #> , , 2 #>  #>       [,2] [,3] [,4] #> [45,]  2.7  4.2  1.3 #> [46,]  3.0  4.2  1.2 #> [47,]  2.9  4.2  1.3 #> [48,]  2.9  4.3  1.3 #> [49,]  2.5  3.0  1.1 #> [50,]  2.8  4.1  1.3 #>  #> , , 3 #>  #>       [,2] [,3] [,4] #> [45,]  3.3  5.7  2.5 #> [46,]  3.0  5.2  2.3 #> [47,]  2.5  5.0  1.9 #> [48,]  3.0  5.2  2.0 #> [49,]  3.4  5.4  2.3 #> [50,]  3.0  5.1  1.8 #>  tail(a3d, c(6, -1, 2), keepnums = FALSE) #> , , 1 #>  #>      [,1] [,2] [,3] #> [1,]  2.7  4.2  1.3 #> [2,]  3.0  4.2  1.2 #> [3,]  2.9  4.2  1.3 #> [4,]  2.9  4.3  1.3 #> [5,]  2.5  3.0  1.1 #> [6,]  2.8  4.1  1.3 #>  #> , , 2 #>  #>      [,1] [,2] [,3] #> [1,]  3.3  5.7  2.5 #> [2,]  3.0  5.2  2.3 #> [3,]  2.5  5.0  1.9 #> [4,]  3.0  5.2  2.0 #> [5,]  3.4  5.4  2.3 #> [6,]  3.0  5.1  1.8 #>   ## data frame w/ a (non-standard) attribute: treeS <- structure(trees, foo = \"bar\") (n <- nrow(treeS)) #> [1] 31 stopifnot(exprs = { # attribute is kept     identical(htS <- head(treeS), treeS[1:6, ])     identical(attr(htS, \"foo\") , \"bar\")     identical(tlS <- tail(treeS), treeS[(n-5):n, ])     ## BUT if I use \"useAttrib(.)\", this is *not* ok, when n is of length 2:     ## --- because [i,j]-indexing of data frames *also* drops \"other\" attributes ..     identical(tail(treeS, 3:2), treeS[(n-2):n, 2:3] ) })  tail(library) # last lines of function #>                                     #> 375         return(y)               #> 376     }                           #> 377     if (logical.return)         #> 378         TRUE                    #> 379     else invisible(.packages()) #> 380 }                                head(stats::ftable(Titanic)) #>                                                 #>                           \"Survived\" \"No\" \"Yes\" #>  \"Class\" \"Sex\"    \"Age\"                         #>  \"1st\"   \"Male\"   \"Child\"               0     5 #>                   \"Adult\"             118    57 #>          \"Female\" \"Child\"               0     1 #>                   \"Adult\"               4   140 #>  \"2nd\"   \"Male\"   \"Child\"               0    11 #>                   \"Adult\"             154    14  ## 1d-array (with named dim) : a1 <- array(1:7, 7); names(dim(a1)) <- \"O2\" stopifnot(exprs = {   identical( tail(a1, 10), a1)   identical( head(a1, 10), a1)   identical( head(a1, 1), a1 [1 , drop=FALSE] ) # was a1[1] in R <= 3.6.x   identical( tail(a1, 2), a1[6:7])   identical( tail(a1, 1), a1 [7 , drop=FALSE] ) # was a1[7] in R <= 3.6.x })"},{"path":"https://danielruss.github.io/socR/reference/is.codingsystem.html","id":null,"dir":"Reference","previous_headings":"","what":"checks if an object is a coding system — is.codingsystem","title":"checks if an object is a coding system — is.codingsystem","text":"object coding system","code":""},{"path":"https://danielruss.github.io/socR/reference/is.codingsystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"checks if an object is a coding system — is.codingsystem","text":"","code":"is.codingsystem(x)"},{"path":"https://danielruss.github.io/socR/reference/is.codingsystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"checks if an object is a coding system — is.codingsystem","text":"x object test","code":""},{"path":"https://danielruss.github.io/socR/reference/is.xwalk.html","id":null,"dir":"Reference","previous_headings":"","what":"checks if an object is a crosswalk — is.xwalk","title":"checks if an object is a crosswalk — is.xwalk","text":"object crosswalk","code":""},{"path":"https://danielruss.github.io/socR/reference/is.xwalk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"checks if an object is a crosswalk — is.xwalk","text":"","code":"is.xwalk(x)"},{"path":"https://danielruss.github.io/socR/reference/is.xwalk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"checks if an object is a crosswalk — is.xwalk","text":"x crosswalk class xwalk","code":""},{"path":"https://danielruss.github.io/socR/reference/is_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a value is a url by looking for the http(s):// .Works with vectors... — is_url","title":"Check if a value is a url by looking for the http(s):// .Works with vectors... — is_url","text":"Check value url looking http(s):// .Works vectors...","code":""},{"path":"https://danielruss.github.io/socR/reference/is_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a value is a url by looking for the http(s):// .Works with vectors... — is_url","text":"","code":"is_url(x)"},{"path":"https://danielruss.github.io/socR/reference/is_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a value is a url by looking for the http(s):// .Works with vectors... — is_url","text":"x String check","code":""},{"path":"https://danielruss.github.io/socR/reference/is_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a value is a url by looking for the http(s):// .Works with vectors... — is_url","text":"logical vector TRUE x url False otherwise","code":""},{"path":"https://danielruss.github.io/socR/reference/is_valid.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a set of codes are valid for a coding system — is_valid","title":"Check if a set of codes are valid for a coding system — is_valid","text":"Check set codes valid coding system","code":""},{"path":"https://danielruss.github.io/socR/reference/is_valid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a set of codes are valid for a coding system — is_valid","text":"","code":"is_valid(code, system)"},{"path":"https://danielruss.github.io/socR/reference/is_valid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a set of codes are valid for a coding system — is_valid","text":"code vector codes check system coding system","code":""},{"path":"https://danielruss.github.io/socR/reference/is_valid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a set of codes are valid for a coding system — is_valid","text":"boolean vector corresponding whether codes coding system","code":""},{"path":"https://danielruss.github.io/socR/reference/level.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the code Level — level","title":"Get the code Level — level","text":"Gets levels vector codes codingsystem type returned depends data.","code":""},{"path":"https://danielruss.github.io/socR/reference/level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the code Level — level","text":"","code":"level(data, codes)  # S3 method for class 'codingsystem' level(data, codes)"},{"path":"https://danielruss.github.io/socR/reference/level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the code Level — level","text":"data - codingsystem codes - vector codes check","code":""},{"path":"https://danielruss.github.io/socR/reference/level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the code Level — level","text":"vector Levels","code":""},{"path":"https://danielruss.github.io/socR/reference/level.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the code Level — level","text":"","code":"level(soc1980_all,\"99-99\") # \"division\" #>      99-99  #> \"division\"  level(soc2010_all,c(\"11-1011\",\"11-2010\")) # c(6,5) #> 11-1011 11-2010  #>       6       5"},{"path":"https://danielruss.github.io/socR/reference/load_socassign_db.html","id":null,"dir":"Reference","previous_headings":"","what":"load_socassign_db — load_socassign_db","title":"load_socassign_db — load_socassign_db","text":"load data SOCAssign SQLite database","code":""},{"path":"https://danielruss.github.io/socR/reference/load_socassign_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"load_socassign_db — load_socassign_db","text":"","code":"load_socassign_db(fname, addSrc = FALSE)"},{"path":"https://danielruss.github.io/socR/reference/load_socassign_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"load_socassign_db — load_socassign_db","text":"fname SOCAssign db file addSrc add file name src column","code":""},{"path":"https://danielruss.github.io/socR/reference/load_socassign_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"load_socassign_db — load_socassign_db","text":"tibble coder results","code":""},{"path":"https://danielruss.github.io/socR/reference/lookup_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up code — lookup_code","title":"Look up code — lookup_code","text":"Look code","code":""},{"path":"https://danielruss.github.io/socR/reference/lookup_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up code — lookup_code","text":"","code":"lookup_code(x, system)"},{"path":"https://danielruss.github.io/socR/reference/lookup_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up code — lookup_code","text":"x list codes lookup system coding system","code":""},{"path":"https://danielruss.github.io/socR/reference/lookup_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up code — lookup_code","text":"vector titles codes","code":""},{"path":"https://danielruss.github.io/socR/reference/make_code_str.html","id":null,"dir":"Reference","previous_headings":"","what":"convert a list column of codes to vector of string for display — make_code_str","title":"convert a list column of codes to vector of string for display — make_code_str","text":"convert list column codes vector string display","code":""},{"path":"https://danielruss.github.io/socR/reference/make_code_str.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert a list column of codes to vector of string for display — make_code_str","text":"","code":"make_code_str(x)"},{"path":"https://danielruss.github.io/socR/reference/make_code_str.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert a list column of codes to vector of string for display — make_code_str","text":"x codes column","code":""},{"path":"https://danielruss.github.io/socR/reference/make_code_str.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert a list column of codes to vector of string for display — make_code_str","text":"vector string concatenating codes","code":""},{"path":"https://danielruss.github.io/socR/reference/make_code_str.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"convert a list column of codes to vector of string for display — make_code_str","text":"","code":"df <- tibble::tibble(soc2010_codes = list(c(\"11-1011\",\"11-1021\"),c(\"11-1000\"))) df <- dplyr::mutate(df,code_str=make_code_str(soc2010_codes))"},{"path":"https://danielruss.github.io/socR/reference/name.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the user assigned name of the coding system — name","title":"Returns the user assigned name of the coding system — name","text":"Returns user assigned name coding system","code":""},{"path":"https://danielruss.github.io/socR/reference/name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the user assigned name of the coding system — name","text":"","code":"name(system)"},{"path":"https://danielruss.github.io/socR/reference/name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the user assigned name of the coding system — name","text":"system coding system","code":""},{"path":"https://danielruss.github.io/socR/reference/name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the user assigned name of the coding system — name","text":"name coding system (may blank)","code":""},{"path":"https://danielruss.github.io/socR/reference/noc2011_4digit.html","id":null,"dir":"Reference","previous_headings":"","what":"noc2011 4 digit classification system — noc2011_4digit","title":"noc2011 4 digit classification system — noc2011_4digit","text":"Canadian 4 digit National Occupational Classification (NOC) 2011","code":""},{"path":"https://danielruss.github.io/socR/reference/noc2011_4digit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"noc2011 4 digit classification system — noc2011_4digit","text":"","code":"noc2011_4digit"},{"path":"https://danielruss.github.io/socR/reference/noc2011_4digit.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"noc2011 4 digit classification system — noc2011_4digit","text":"noc_code 4 digit code formated like '0011', careful must string integer title short definition code","code":""},{"path":"https://danielruss.github.io/socR/reference/noc2011_4digit.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"noc2011 4 digit classification system — noc2011_4digit","text":"https://danielruss.github.io/codingsystems/noc_2011_4d.csv https://www.statcan.gc.ca/eng/subjects/standard/noc/2011/index","code":""},{"path":"https://danielruss.github.io/socR/reference/noc2011_all.html","id":null,"dir":"Reference","previous_headings":"","what":"noc2011 4 digit classification system — noc2011_all","title":"noc2011 4 digit classification system — noc2011_all","text":"Canadian 4 digit National Occupational Classification (NOC) 2011","code":""},{"path":"https://danielruss.github.io/socR/reference/noc2011_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"noc2011 4 digit classification system — noc2011_all","text":"","code":"noc2011_all"},{"path":"https://danielruss.github.io/socR/reference/noc2011_all.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"noc2011 4 digit classification system — noc2011_all","text":"code 1-4-digit code formated like '0011', careful must string integer title short definition code Level Unofficial name level hierarchy (number digits) code, 1, 2, 3, 4 Hierarchical_structure Official name level hierarchy noc1d 1-digit noc code associated code noc2d 2-digit noc code associated code, NA 1-digit codes noc3d 3-digit noc code associated code, NA 1- 2-digit codes noc4d 4-digit noc code associated code, NA 1-, 2-, 3-digit codes","code":""},{"path":"https://danielruss.github.io/socR/reference/noc2011_all.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"noc2011 4 digit classification system — noc2011_all","text":"https://danielruss.github.io/codingsystems/noc_2011_4d.csv https://www.statcan.gc.ca/eng/subjects/standard/noc/2011/index","code":""},{"path":"https://danielruss.github.io/socR/reference/print.codingsystem.html","id":null,"dir":"Reference","previous_headings":"","what":"prints a codingsystem — print.codingsystem","title":"prints a codingsystem — print.codingsystem","text":"prints codingsystem","code":""},{"path":"https://danielruss.github.io/socR/reference/print.codingsystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prints a codingsystem — print.codingsystem","text":"","code":"# S3 method for class 'codingsystem' print(x, ...)"},{"path":"https://danielruss.github.io/socR/reference/print.codingsystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prints a codingsystem — print.codingsystem","text":"x - codingsystem ... parameter format, currently used","code":""},{"path":"https://danielruss.github.io/socR/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr arrange, count, filter, mutate, select tibble as_tibble","code":""},{"path":"https://danielruss.github.io/socR/reference/soc1980_all.html","id":null,"dir":"Reference","previous_headings":"","what":"SOC 1980 complete classification system — soc1980_all","title":"SOC 1980 complete classification system — soc1980_all","text":"US SOC 1980 classification system","code":""},{"path":"https://danielruss.github.io/socR/reference/soc1980_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOC 1980 complete classification system — soc1980_all","text":"","code":"soc1980_all"},{"path":"https://danielruss.github.io/socR/reference/soc1980_all.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SOC 1980 complete classification system — soc1980_all","text":"soc1980_code n-digit soc 1980 title short definition code","code":""},{"path":"https://danielruss.github.io/socR/reference/soc1980_all.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SOC 1980 complete classification system — soc1980_all","text":"https://danielruss.github.io/codingsystems/soc1980.csv","code":""},{"path":"https://danielruss.github.io/socR/reference/soc1980_detailed.html","id":null,"dir":"Reference","previous_headings":"","what":"Detailed SOC 1980 classification system — soc1980_detailed","title":"Detailed SOC 1980 classification system — soc1980_detailed","text":"US SOC 1980 classification system can higher level (major minor codes) codes without children. data contains detailed codes regardless code level.","code":""},{"path":"https://danielruss.github.io/socR/reference/soc1980_detailed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detailed SOC 1980 classification system — soc1980_detailed","text":"","code":"soc1980_detailed"},{"path":"https://danielruss.github.io/socR/reference/soc1980_detailed.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Detailed SOC 1980 classification system — soc1980_detailed","text":"soc1980_code soc 1980 code title short definition code Level level soc 1980 code parent parent soc 1980 code, note: division level, parent 0000 division soc 1980 code, division code major soc 1980 code, major code.  NA division codes. minor soc 1980 code, minor code. NA division major codes. unit soc 1980 code, unit code.  NA non-unit codes.","code":""},{"path":"https://danielruss.github.io/socR/reference/soc1980_detailed.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Detailed SOC 1980 classification system — soc1980_detailed","text":"https://danielruss.github.io/codingsystems/soc1980_most_detailed.csv","code":""},{"path":"https://danielruss.github.io/socR/reference/soc1980_extended.html","id":null,"dir":"Reference","previous_headings":"","what":"Extended SOC 1980 complete classification system — soc1980_extended","title":"Extended SOC 1980 complete classification system — soc1980_extended","text":"US SOC 1980 classification system can higher level (major minor codes) codes without children.  extended SOC 1980 classification system require major codes (2-digit code) least 1 minor code (3-digit code ), every minor codes least 1 unit code (4-digit code).  detailed code now always unit code.","code":""},{"path":"https://danielruss.github.io/socR/reference/soc1980_extended.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extended SOC 1980 complete classification system — soc1980_extended","text":"","code":"soc1980_extended"},{"path":"https://danielruss.github.io/socR/reference/soc1980_extended.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Extended SOC 1980 complete classification system — soc1980_extended","text":"soc1980_code soc 1980 code title short definition code Level level soc 1980 code parent parent soc 1980 code, note: division level, parent 0000 division soc 1980 code, division code major soc 1980 code, major code.  NA division codes. minor soc 1980 code, minor code. NA division major codes. unit soc 1980 code, unit code.  NA non-unit codes.","code":""},{"path":"https://danielruss.github.io/socR/reference/soc1980_extended.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Extended SOC 1980 complete classification system — soc1980_extended","text":"https://danielruss.github.io/codingsystems/soc_1980_extended.csv","code":""},{"path":"https://danielruss.github.io/socR/reference/soc2010_6digit.html","id":null,"dir":"Reference","previous_headings":"","what":"soc2010 6 digit classification system — soc2010_6digit","title":"soc2010 6 digit classification system — soc2010_6digit","text":"Downloaded Daniel Russ","code":""},{"path":"https://danielruss.github.io/socR/reference/soc2010_6digit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"soc2010 6 digit classification system — soc2010_6digit","text":"","code":"soc2010_6digit"},{"path":"https://danielruss.github.io/socR/reference/soc2010_6digit.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"soc2010 6 digit classification system — soc2010_6digit","text":"code 6 digit code formated like '11-1011' title short definition code","code":""},{"path":"https://danielruss.github.io/socR/reference/soc2010_6digit.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"soc2010 6 digit classification system — soc2010_6digit","text":"https://danielruss.github.io/codingsystems/soc_2010_6digit.csv https://www.bls.gov/soc/2010/2010_major_groups.htm","code":""},{"path":"https://danielruss.github.io/socR/reference/soc2010_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete SOC 2010 classification system — soc2010_all","title":"Complete SOC 2010 classification system — soc2010_all","text":"complete US SOC 2010 classification system. data contains codes  regardless code level.","code":""},{"path":"https://danielruss.github.io/socR/reference/soc2010_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete SOC 2010 classification system — soc2010_all","text":"","code":"soc2010_all"},{"path":"https://danielruss.github.io/socR/reference/soc2010_all.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Complete SOC 2010 classification system — soc2010_all","text":"code soc 2010 code title short definition code Level number significant digits code Hierarchical_structure name level parent parent soc code, note: 2 digit soc code dont parents soc2d soc code, 2-digit code soc3d soc code, 3-digit code. NA 2-digit codes. soc5d soc code, 5-digit code. NA 2- 3-digit codes. soc6d soc code, 6-digit code. NA 2-, 3-, 5-digit codes.","code":""},{"path":"https://danielruss.github.io/socR/reference/soc2010_all.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Complete SOC 2010 classification system — soc2010_all","text":"https://danielruss.github.io/codingsystems/soc2010_all.csv","code":""},{"path":"https://danielruss.github.io/socR/reference/soc2018_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete SOC 2018 classification system — soc2018_all","title":"Complete SOC 2018 classification system — soc2018_all","text":"complete US SOC 2018 classification system. data contains codes  regardless code level.","code":""},{"path":"https://danielruss.github.io/socR/reference/soc2018_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete SOC 2018 classification system — soc2018_all","text":"","code":"soc2018_all"},{"path":"https://danielruss.github.io/socR/reference/soc2018_all.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Complete SOC 2018 classification system — soc2018_all","text":"code soc 2018 code title short definition code Level number significant digits code Hierarchical_structure name level parent parent soc code, note: 2 digit soc code dont parents soc2d soc code, 2-digit code soc3d soc code, 3-digit code. NA 2-digit codes. soc5d soc code, 5-digit code. NA 2- 3-digit codes. soc6d soc code, 6-digit code. NA 2-, 3-, 5-digit codes.","code":""},{"path":"https://danielruss.github.io/socR/reference/soc2018_all.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Complete SOC 2018 classification system — soc2018_all","text":"https://danielruss.github.io/codingsystems/soc2018_all.csv","code":""},{"path":"https://danielruss.github.io/socR/reference/split_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Split data — split_data","title":"Split data — split_data","text":"simple deterministic mechanism splitting data training, development, test data based MD5 hash unused string parameters.","code":""},{"path":"https://danielruss.github.io/socR/reference/split_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split data — split_data","text":"","code":"split_data(x, pTrain = 0.9, pDev = 0.09, pTest = 0.01)"},{"path":"https://danielruss.github.io/socR/reference/split_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split data — split_data","text":"x unused string data used split data pTrain approximate percent training split pDev approximate percent development split pTest approximate percent test split","code":""},{"path":"https://danielruss.github.io/socR/reference/split_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split data — split_data","text":"vector factors (Train,Dev,Test) denoting data split","code":""},{"path":"https://danielruss.github.io/socR/reference/split_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split data — split_data","text":"","code":"split_data(rownames(mtcars)) #>  [1] train train train train train train train train train train train train #> [13] train train train train train train train train train train train train #> [25] test  train train train test  dev   train train #> Levels: train dev test"},{"path":"https://danielruss.github.io/socR/reference/standardize_soc1980_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize US SOC 1980 codes — standardize_soc1980_codes","title":"Standardize US SOC 1980 codes — standardize_soc1980_codes","text":"US SOC 1980 codes often written none stand form (e.g 4600 instead 46-47).  function attempt standardize ways SOC 1980 codes written.","code":""},{"path":"https://danielruss.github.io/socR/reference/standardize_soc1980_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize US SOC 1980 codes — standardize_soc1980_codes","text":"","code":"standardize_soc1980_codes(codes)"},{"path":"https://danielruss.github.io/socR/reference/standardize_soc1980_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize US SOC 1980 codes — standardize_soc1980_codes","text":"codes vector US SOC 1980 codes","code":""},{"path":"https://danielruss.github.io/socR/reference/standardize_soc1980_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize US SOC 1980 codes — standardize_soc1980_codes","text":"standardized US SOC 1980 codes","code":""},{"path":"https://danielruss.github.io/socR/reference/standardize_soc1980_codes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standardize US SOC 1980 codes — standardize_soc1980_codes","text":"function trims leading trailing zeros (\"2 trailing zero - 20 valid soc code)","code":""},{"path":"https://danielruss.github.io/socR/reference/standardize_soc1980_codes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardize US SOC 1980 codes — standardize_soc1980_codes","text":"","code":"standardize_soc1980_codes(c(\"2000\",'7600')) #> [1] \"20\"    \"75-76\""},{"path":"https://danielruss.github.io/socR/reference/tail.codingsystem.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the First or Last Parts of an Object — tail.codingsystem","title":"Return the First or Last Parts of an Object — tail.codingsystem","text":"Returns first last parts vector, matrix, table, data frame   function.  Since head() tail() generic   functions, may also extended classes.","code":""},{"path":"https://danielruss.github.io/socR/reference/tail.codingsystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the First or Last Parts of an Object — tail.codingsystem","text":"","code":"# S3 method for class 'codingsystem' tail(x, ...)"},{"path":"https://danielruss.github.io/socR/reference/tail.codingsystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the First or Last Parts of an Object — tail.codingsystem","text":"x object ... arguments passed methods.","code":""},{"path":"https://danielruss.github.io/socR/reference/tail.codingsystem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the First or Last Parts of an Object — tail.codingsystem","text":"object (usually) like x generally smaller.  Hence,   arrays, result corresponds x[.., drop=FALSE].   ftable objects x, transformed format(x).","code":""},{"path":"https://danielruss.github.io/socR/reference/tail.codingsystem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return the First or Last Parts of an Object — tail.codingsystem","text":"vector/array based objects, head() (tail()) returns   subset dimensionality x, usually   class. historical reasons, default select   first (last) 6 indices first dimension (\"rows\") along   length non-dimensioned vector, full extent (indices)   remaining dimensions. head.matrix()   tail.matrix() exported. default array(/matrix) methods head()   tail() quite general. work class   dim() method, length() method (  required dim() returns NULL), [ method   (accepts drop argument can subset   dimensions dimensioned case). functions, lines deparsed function returned   character strings. x array(/matrix) dimensionality two ,   tail() add dimnames similar appear   full printing x dimensions k   n[k] specified non-missing dimnames(x)[[k]]   (dimnames(x) ) NULL.  Specifically,   form added dimnames vary different dimensions follows: k=1 (rows): \"[n,]\" (right justified       whitespace padding) k=2 (columns): \"[,n]\" (whitespace       padding) k>2 (higher dims): \"n\", .e., indices       character values Setting keepnums = FALSE suppresses behaviour. data.frame subsetting (‘indexing’) keeps   attributes, head() tail()   methods data frames.","code":""},{"path":"https://danielruss.github.io/socR/reference/tail.codingsystem.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Return the First or Last Parts of an Object — tail.codingsystem","text":"array inputs output tail keepnums TRUE,   dimnames vectors added dimensions >2 original   numeric indices dimension character vectors.    means , e.g., 3-dimensional array arr,   tail(arr, c(2,2,-1))[ , , 2]   tail(arr, c(2,2,-1))[ , , \"2\"] may valid   completely different meanings.","code":""},{"path":"https://danielruss.github.io/socR/reference/tail.codingsystem.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return the First or Last Parts of an Object — tail.codingsystem","text":"Patrick Burns, improved corrected R-Core. Negative argument   added Vincent Goulet.  Multi-dimension support added Gabriel Becker.","code":""},{"path":"https://danielruss.github.io/socR/reference/tail.codingsystem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the First or Last Parts of an Object — tail.codingsystem","text":"","code":"head(letters) #> [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" head(letters, n = -6L) #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" #> [20] \"t\"  head(freeny.x, n = 10L) #>       lag quarterly revenue price index income level market potential #>  [1,]               8.79636     4.70997      5.82110          12.9699 #>  [2,]               8.79236     4.70217      5.82558          12.9733 #>  [3,]               8.79137     4.68944      5.83112          12.9774 #>  [4,]               8.81486     4.68558      5.84046          12.9806 #>  [5,]               8.81301     4.64019      5.85036          12.9831 #>  [6,]               8.90751     4.62553      5.86464          12.9854 #>  [7,]               8.93673     4.61991      5.87769          12.9900 #>  [8,]               8.96161     4.61654      5.89763          12.9943 #>  [9,]               8.96044     4.61407      5.92574          12.9992 #> [10,]               9.00868     4.60766      5.94232          13.0033 head(freeny.y) #>         Qtr1    Qtr2    Qtr3    Qtr4 #> 1962         8.79236 8.79137 8.81486 #> 1963 8.81301 8.90751 8.93673          head(iris3) #> , , Setosa #>  #>      Sepal L. Sepal W. Petal L. Petal W. #> [1,]      5.1      3.5      1.4      0.2 #> [2,]      4.9      3.0      1.4      0.2 #> [3,]      4.7      3.2      1.3      0.2 #> [4,]      4.6      3.1      1.5      0.2 #> [5,]      5.0      3.6      1.4      0.2 #> [6,]      5.4      3.9      1.7      0.4 #>  #> , , Versicolor #>  #>      Sepal L. Sepal W. Petal L. Petal W. #> [1,]      7.0      3.2      4.7      1.4 #> [2,]      6.4      3.2      4.5      1.5 #> [3,]      6.9      3.1      4.9      1.5 #> [4,]      5.5      2.3      4.0      1.3 #> [5,]      6.5      2.8      4.6      1.5 #> [6,]      5.7      2.8      4.5      1.3 #>  #> , , Virginica #>  #>      Sepal L. Sepal W. Petal L. Petal W. #> [1,]      6.3      3.3      6.0      2.5 #> [2,]      5.8      2.7      5.1      1.9 #> [3,]      7.1      3.0      5.9      2.1 #> [4,]      6.3      2.9      5.6      1.8 #> [5,]      6.5      3.0      5.8      2.2 #> [6,]      7.6      3.0      6.6      2.1 #>  head(iris3, c(6L, 2L)) #> , , Setosa #>  #>      Sepal L. Sepal W. #> [1,]      5.1      3.5 #> [2,]      4.9      3.0 #> [3,]      4.7      3.2 #> [4,]      4.6      3.1 #> [5,]      5.0      3.6 #> [6,]      5.4      3.9 #>  #> , , Versicolor #>  #>      Sepal L. Sepal W. #> [1,]      7.0      3.2 #> [2,]      6.4      3.2 #> [3,]      6.9      3.1 #> [4,]      5.5      2.3 #> [5,]      6.5      2.8 #> [6,]      5.7      2.8 #>  #> , , Virginica #>  #>      Sepal L. Sepal W. #> [1,]      6.3      3.3 #> [2,]      5.8      2.7 #> [3,]      7.1      3.0 #> [4,]      6.3      2.9 #> [5,]      6.5      3.0 #> [6,]      7.6      3.0 #>  head(iris3, c(6L, -1L, 2L)) #> , , Setosa #>  #>      Sepal L. Sepal W. Petal L. #> [1,]      5.1      3.5      1.4 #> [2,]      4.9      3.0      1.4 #> [3,]      4.7      3.2      1.3 #> [4,]      4.6      3.1      1.5 #> [5,]      5.0      3.6      1.4 #> [6,]      5.4      3.9      1.7 #>  #> , , Versicolor #>  #>      Sepal L. Sepal W. Petal L. #> [1,]      7.0      3.2      4.7 #> [2,]      6.4      3.2      4.5 #> [3,]      6.9      3.1      4.9 #> [4,]      5.5      2.3      4.0 #> [5,]      6.5      2.8      4.6 #> [6,]      5.7      2.8      4.5 #>   tail(letters) #> [1] \"u\" \"v\" \"w\" \"x\" \"y\" \"z\" tail(letters, n = -6L) #>  [1] \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" #> [20] \"z\"  tail(freeny.x) #>       lag quarterly revenue price index income level market potential #> [34,]               9.69405     4.30909      6.17369          13.1459 #> [35,]               9.69958     4.30909      6.16135          13.1520 #> [36,]               9.68683     4.30552      6.18231          13.1593 #> [37,]               9.71774     4.29627      6.18768          13.1579 #> [38,]               9.74924     4.27839      6.19377          13.1625 #> [39,]               9.77536     4.27789      6.20030          13.1664 ## the bottom-right \"corner\" : tail(freeny.x, n = c(4, 2)) #>       income level market potential #> [36,]      6.18231          13.1593 #> [37,]      6.18768          13.1579 #> [38,]      6.19377          13.1625 #> [39,]      6.20030          13.1664 tail(freeny.y) #>         Qtr1    Qtr2    Qtr3    Qtr4 #> 1970                 9.69958 9.68683 #> 1971 9.71774 9.74924 9.77536 9.79424  tail(iris3) #> , , Setosa #>  #>       Sepal L. Sepal W. Petal L. Petal W. #> [45,]      5.1      3.8      1.9      0.4 #> [46,]      4.8      3.0      1.4      0.3 #> [47,]      5.1      3.8      1.6      0.2 #> [48,]      4.6      3.2      1.4      0.2 #> [49,]      5.3      3.7      1.5      0.2 #> [50,]      5.0      3.3      1.4      0.2 #>  #> , , Versicolor #>  #>       Sepal L. Sepal W. Petal L. Petal W. #> [45,]      5.6      2.7      4.2      1.3 #> [46,]      5.7      3.0      4.2      1.2 #> [47,]      5.7      2.9      4.2      1.3 #> [48,]      6.2      2.9      4.3      1.3 #> [49,]      5.1      2.5      3.0      1.1 #> [50,]      5.7      2.8      4.1      1.3 #>  #> , , Virginica #>  #>       Sepal L. Sepal W. Petal L. Petal W. #> [45,]      6.7      3.3      5.7      2.5 #> [46,]      6.7      3.0      5.2      2.3 #> [47,]      6.3      2.5      5.0      1.9 #> [48,]      6.5      3.0      5.2      2.0 #> [49,]      6.2      3.4      5.4      2.3 #> [50,]      5.9      3.0      5.1      1.8 #>  tail(iris3, c(6L, 2L)) #> , , Setosa #>  #>       Petal L. Petal W. #> [45,]      1.9      0.4 #> [46,]      1.4      0.3 #> [47,]      1.6      0.2 #> [48,]      1.4      0.2 #> [49,]      1.5      0.2 #> [50,]      1.4      0.2 #>  #> , , Versicolor #>  #>       Petal L. Petal W. #> [45,]      4.2      1.3 #> [46,]      4.2      1.2 #> [47,]      4.2      1.3 #> [48,]      4.3      1.3 #> [49,]      3.0      1.1 #> [50,]      4.1      1.3 #>  #> , , Virginica #>  #>       Petal L. Petal W. #> [45,]      5.7      2.5 #> [46,]      5.2      2.3 #> [47,]      5.0      1.9 #> [48,]      5.2      2.0 #> [49,]      5.4      2.3 #> [50,]      5.1      1.8 #>  tail(iris3, c(6L, -1L, 2L)) #> , , Versicolor #>  #>       Sepal W. Petal L. Petal W. #> [45,]      2.7      4.2      1.3 #> [46,]      3.0      4.2      1.2 #> [47,]      2.9      4.2      1.3 #> [48,]      2.9      4.3      1.3 #> [49,]      2.5      3.0      1.1 #> [50,]      2.8      4.1      1.3 #>  #> , , Virginica #>  #>       Sepal W. Petal L. Petal W. #> [45,]      3.3      5.7      2.5 #> [46,]      3.0      5.2      2.3 #> [47,]      2.5      5.0      1.9 #> [48,]      3.0      5.2      2.0 #> [49,]      3.4      5.4      2.3 #> [50,]      3.0      5.1      1.8 #>   ## iris with dimnames stripped a3d <- iris3 ; dimnames(a3d) <- NULL tail(a3d, c(6, -1, 2)) # keepnums = TRUE is default here! #> , , 2 #>  #>       [,2] [,3] [,4] #> [45,]  2.7  4.2  1.3 #> [46,]  3.0  4.2  1.2 #> [47,]  2.9  4.2  1.3 #> [48,]  2.9  4.3  1.3 #> [49,]  2.5  3.0  1.1 #> [50,]  2.8  4.1  1.3 #>  #> , , 3 #>  #>       [,2] [,3] [,4] #> [45,]  3.3  5.7  2.5 #> [46,]  3.0  5.2  2.3 #> [47,]  2.5  5.0  1.9 #> [48,]  3.0  5.2  2.0 #> [49,]  3.4  5.4  2.3 #> [50,]  3.0  5.1  1.8 #>  tail(a3d, c(6, -1, 2), keepnums = FALSE) #> , , 1 #>  #>      [,1] [,2] [,3] #> [1,]  2.7  4.2  1.3 #> [2,]  3.0  4.2  1.2 #> [3,]  2.9  4.2  1.3 #> [4,]  2.9  4.3  1.3 #> [5,]  2.5  3.0  1.1 #> [6,]  2.8  4.1  1.3 #>  #> , , 2 #>  #>      [,1] [,2] [,3] #> [1,]  3.3  5.7  2.5 #> [2,]  3.0  5.2  2.3 #> [3,]  2.5  5.0  1.9 #> [4,]  3.0  5.2  2.0 #> [5,]  3.4  5.4  2.3 #> [6,]  3.0  5.1  1.8 #>   ## data frame w/ a (non-standard) attribute: treeS <- structure(trees, foo = \"bar\") (n <- nrow(treeS)) #> [1] 31 stopifnot(exprs = { # attribute is kept     identical(htS <- head(treeS), treeS[1:6, ])     identical(attr(htS, \"foo\") , \"bar\")     identical(tlS <- tail(treeS), treeS[(n-5):n, ])     ## BUT if I use \"useAttrib(.)\", this is *not* ok, when n is of length 2:     ## --- because [i,j]-indexing of data frames *also* drops \"other\" attributes ..     identical(tail(treeS, 3:2), treeS[(n-2):n, 2:3] ) })  tail(library) # last lines of function #>                                     #> 375         return(y)               #> 376     }                           #> 377     if (logical.return)         #> 378         TRUE                    #> 379     else invisible(.packages()) #> 380 }                                head(stats::ftable(Titanic)) #>                                                 #>                           \"Survived\" \"No\" \"Yes\" #>  \"Class\" \"Sex\"    \"Age\"                         #>  \"1st\"   \"Male\"   \"Child\"               0     5 #>                   \"Adult\"             118    57 #>          \"Female\" \"Child\"               0     1 #>                   \"Adult\"               4   140 #>  \"2nd\"   \"Male\"   \"Child\"               0    11 #>                   \"Adult\"             154    14  ## 1d-array (with named dim) : a1 <- array(1:7, 7); names(dim(a1)) <- \"O2\" stopifnot(exprs = {   identical( tail(a1, 10), a1)   identical( head(a1, 10), a1)   identical( head(a1, 1), a1 [1 , drop=FALSE] ) # was a1[1] in R <= 3.6.x   identical( tail(a1, 2), a1[6:7])   identical( tail(a1, 1), a1 [7 , drop=FALSE] ) # was a1[7] in R <= 3.6.x })"},{"path":"https://danielruss.github.io/socR/reference/to_level.html","id":null,"dir":"Reference","previous_headings":"","what":"to_level — to_level","title":"to_level — to_level","text":"utility function converting occupational codes higher levels hierarchy.","code":""},{"path":"https://danielruss.github.io/socR/reference/to_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"to_level — to_level","text":"","code":"to_level(codingsystem, level)"},{"path":"https://danielruss.github.io/socR/reference/to_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"to_level — to_level","text":"codingsystem coding system using level level coding system want.  column name codingsystem table.","code":""},{"path":"https://danielruss.github.io/socR/reference/to_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"to_level — to_level","text":"function converts vector codes lower level  level input.","code":""},{"path":"https://danielruss.github.io/socR/reference/to_level.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"to_level — to_level","text":"","code":"to_soc2010_2d <- to_level(soc2010_all, soc2d) to_soc2010_2d(c(\"11-1011\",\"15-1110\")) #> [1] \"11-0000\" \"15-0000\""},{"path":"https://danielruss.github.io/socR/reference/to_list_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a list column from multiple columns — to_list_column","title":"Create a list column from multiple columns — to_list_column","text":"function replaces set input columns pass list column containing values input column row--row basis.","code":""},{"path":"https://danielruss.github.io/socR/reference/to_list_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a list column from multiple columns — to_list_column","text":"","code":"to_list_column(df, colname, ...)"},{"path":"https://danielruss.github.io/socR/reference/to_list_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a list column from multiple columns — to_list_column","text":"df data frame modifying colname name new column ... columns combining list column","code":""},{"path":"https://danielruss.github.io/socR/reference/to_list_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a list column from multiple columns — to_list_column","text":"original data frame new list column `colname` replacing columns given","code":""},{"path":"https://danielruss.github.io/socR/reference/to_list_column.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a list column from multiple columns — to_list_column","text":"","code":"df <- tibble::tibble(a_1=1:3,a_2=2:4,a_3=3:5,b=4:6) |> to_list_column(a,a_1,a_2,a_3)"},{"path":"https://danielruss.github.io/socR/reference/valid_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Is valid code — valid_code","title":"Is valid code — valid_code","text":"check whether code valid","code":""},{"path":"https://danielruss.github.io/socR/reference/valid_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is valid code — valid_code","text":"","code":"valid_code(codeList)  is_valid_6digit_soc2010(code)  is_valid_soc1980(code)  is_most_detailed_soc1980(code)  is_valid_extended_soc1980(code)  is_most_detailed_extended_soc1980(code)"},{"path":"https://danielruss.github.io/socR/reference/valid_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is valid code — valid_code","text":"codeList vector valid codes code codes compare","code":""},{"path":"https://danielruss.github.io/socR/reference/valid_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is valid code — valid_code","text":"valid_code returns function. functions (e.g. is_valid_soc2010) take code vector codes returns logic vector representing codes valid.","code":""},{"path":"https://danielruss.github.io/socR/reference/valid_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Is valid code — valid_code","text":"valid_code functional create function check vector codes valid is_valid_4digit_soc1980, is_valid_6digit_soc2010 is_valid_4digit_noc2011 made using valid_code functional.","code":""},{"path":[]},{"path":"https://danielruss.github.io/socR/reference/valid_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is valid code — valid_code","text":"","code":"is_valid_toy <- valid_code(c(\"A\",\"B\",\"C\")) is_valid_toy(c(\"X\",\"A\",\"Z\",\"B\")) #> [1] FALSE  TRUE FALSE  TRUE"},{"path":"https://danielruss.github.io/socR/reference/xwalk.html","id":null,"dir":"Reference","previous_headings":"","what":"xwalk class constructor — xwalk","title":"xwalk class constructor — xwalk","text":"takes data frame (crosswalk) columns codes titles create xwalk object can perform crosswalks...","code":""},{"path":"https://danielruss.github.io/socR/reference/xwalk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xwalk class constructor — xwalk","text":"","code":"xwalk(   dta,   codes1,   titles1,   codes2,   titles2,   col_types = ifelse(grepl(\"\\\\.xlsx?$\", dta), \"text\", \"c\"),   ... )"},{"path":"https://danielruss.github.io/socR/reference/xwalk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xwalk class constructor — xwalk","text":"dta data frame crosswalk, filename/URL csv crosswalk file filename excel file. codes1 Codes (Default) input coding system crosswalking titles1 Titles (Default) input coding system. codes2 Codes (Default) output coding system crosswalking titles2 Titles (Default) output coding system. col_types set default col_type parameter read_csv/read_excel ... additional parameters passed read_csv","code":""},{"path":"https://danielruss.github.io/socR/reference/xwalk_dplyr.html","id":null,"dir":"Reference","previous_headings":"","what":"Using dplyr verbs with crosswalks — filter.xwalk","title":"Using dplyr verbs with crosswalks — filter.xwalk","text":"methods allow work underlying data within crosswalk tibble.","code":""},{"path":"https://danielruss.github.io/socR/reference/xwalk_dplyr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using dplyr verbs with crosswalks — filter.xwalk","text":"","code":"# S3 method for class 'xwalk' filter(.data, ..., .by = NULL, .preserve = FALSE)  # S3 method for class 'xwalk' arrange(.data, ..., .by_group = FALSE)  # S3 method for class 'xwalk' as_tibble(   x,   ...,   .rows = NULL,   .name_repair = c(\"check_unique\", \"unique\", \"universal\", \"minimal\"),   rownames = pkgconfig::get_config(\"tibble::rownames\", NULL) )"},{"path":"https://danielruss.github.io/socR/reference/xwalk_dplyr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Using dplyr verbs with crosswalks — filter.xwalk","text":".data crosswalk ... <data-masking> Expressions return logical value, defined terms variables .data. multiple expressions included, combined & operator. rows conditions evaluate TRUE kept. . <tidy-select> Optionally, selection columns group just operation, functioning alternative group_by(). details examples, see ?dplyr_by. .preserve Relevant .data input grouped. .preserve = FALSE (default), grouping structure recalculated based resulting data, otherwise grouping kept . .by_group TRUE, sort first grouping variable. Applies grouped data frames . x data frame, list, matrix, object reasonably coerced tibble. .rows number rows, useful create 0-column tibble just additional check. .name_repair Treatment problematic column names: \"minimal\": name repair checks, beyond basic existence, \"unique\": Make sure names unique empty, \"check_unique\": (default value), name repair, check unique, \"universal\": Make names unique syntactic function: apply custom name repair (e.g., .name_repair = make.names names style base R). purrr-style anonymous function, see rlang::as_function() argument passed repair vctrs::vec_as_names(). See details terms strategies used enforce . rownames treat existing row names data frame matrix: NULL: remove row names. default. NA: keep row names. string: name new column. Existing rownames transferred column row.names attribute deleted. name repair applied new column name, even x already contains column name. Use as_tibble(rownames_to_column(...)) safeguard case. Read rownames.","code":""},{"path":"https://danielruss.github.io/socR/reference/xwalk_entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the Shannon entropy for a Crosswalk — xwalk_entropy","title":"Calculates the Shannon entropy for a Crosswalk — xwalk_entropy","text":"potential codes crosswalk allow intial code become, higher entropy.  entropy (S) given $$S = -\\Sigma \\Sigma p log p$$ p = 1/n n number potential codes. single code can map , natural logs used calculation. inner summation can sum n iteration 1/n, equation can simplified $$S = -\\Sigma log p$$","code":""},{"path":"https://danielruss.github.io/socR/reference/xwalk_entropy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the Shannon entropy for a Crosswalk — xwalk_entropy","text":"","code":"xwalk_entropy(x)"},{"path":"https://danielruss.github.io/socR/reference/xwalk_entropy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the Shannon entropy for a Crosswalk — xwalk_entropy","text":"x crosswalk","code":""},{"path":"https://danielruss.github.io/socR/reference/xwalk_entropy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the Shannon entropy for a Crosswalk — xwalk_entropy","text":"entropy","code":""}]
